// Copyright 2023 The Cockroach Authors.
//
// Use of this software is governed by the CockroachDB Software License
// included in the /LICENSE file.

// Code generated by "stringer"; DO NOT EDIT.

package kvpb

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Get-0]
	_ = x[Put-1]
	_ = x[ConditionalPut-2]
	_ = x[Increment-3]
	_ = x[Delete-4]
	_ = x[DeleteRange-5]
	_ = x[ClearRange-6]
	_ = x[RevertRange-7]
	_ = x[Scan-8]
	_ = x[ReverseScan-9]
	_ = x[VectorIndexScan-10]
	_ = x[EndTxn-11]
	_ = x[AdminSplit-12]
	_ = x[AdminUnsplit-13]
	_ = x[AdminMerge-14]
	_ = x[AdminTransferLease-15]
	_ = x[AdminChangeReplicas-16]
	_ = x[AdminRelocateRange-17]
	_ = x[HeartbeatTxn-18]
	_ = x[GC-19]
	_ = x[PushTxn-20]
	_ = x[RecoverTxn-21]
	_ = x[QueryLocks-22]
	_ = x[QueryTxn-23]
	_ = x[QueryIntent-24]
	_ = x[ResolveIntent-25]
	_ = x[ResolveIntentRange-26]
	_ = x[Merge-27]
	_ = x[TruncateLog-28]
	_ = x[RequestLease-29]
	_ = x[TransferLease-30]
	_ = x[LeaseInfo-31]
	_ = x[ComputeChecksum-32]
	_ = x[CheckConsistency-33]
	_ = x[InitPut-34]
	_ = x[WriteBatch-35]
	_ = x[Export-36]
	_ = x[AdminScatter-37]
	_ = x[AddSSTable-38]
	_ = x[LinkExternalSSTable-39]
	_ = x[Migrate-40]
	_ = x[RecomputeStats-41]
	_ = x[Refresh-42]
	_ = x[RefreshRange-43]
	_ = x[Subsume-44]
	_ = x[RangeStats-45]
	_ = x[AdminVerifyProtectedTimestamp-46]
	_ = x[QueryResolvedTimestamp-47]
	_ = x[Barrier-48]
	_ = x[Probe-49]
	_ = x[IsSpanEmpty-50]
	_ = x[MaxMethod-50]
	_ = x[NumMethods-51]
}

func (i Method) String() string {
	switch i {
	case Get:
		return "Get"
	case Put:
		return "Put"
	case ConditionalPut:
		return "ConditionalPut"
	case Increment:
		return "Increment"
	case Delete:
		return "Delete"
	case DeleteRange:
		return "DeleteRange"
	case ClearRange:
		return "ClearRange"
	case RevertRange:
		return "RevertRange"
	case Scan:
		return "Scan"
	case ReverseScan:
		return "ReverseScan"
	case VectorIndexScan:
		return "VectorIndexScan"
	case EndTxn:
		return "EndTxn"
	case AdminSplit:
		return "AdminSplit"
	case AdminUnsplit:
		return "AdminUnsplit"
	case AdminMerge:
		return "AdminMerge"
	case AdminTransferLease:
		return "AdminTransferLease"
	case AdminChangeReplicas:
		return "AdminChangeReplicas"
	case AdminRelocateRange:
		return "AdminRelocateRange"
	case HeartbeatTxn:
		return "HeartbeatTxn"
	case GC:
		return "GC"
	case PushTxn:
		return "PushTxn"
	case RecoverTxn:
		return "RecoverTxn"
	case QueryLocks:
		return "QueryLocks"
	case QueryTxn:
		return "QueryTxn"
	case QueryIntent:
		return "QueryIntent"
	case ResolveIntent:
		return "ResolveIntent"
	case ResolveIntentRange:
		return "ResolveIntentRange"
	case Merge:
		return "Merge"
	case TruncateLog:
		return "TruncateLog"
	case RequestLease:
		return "RequestLease"
	case TransferLease:
		return "TransferLease"
	case LeaseInfo:
		return "LeaseInfo"
	case ComputeChecksum:
		return "ComputeChecksum"
	case CheckConsistency:
		return "CheckConsistency"
	case InitPut:
		return "InitPut"
	case WriteBatch:
		return "WriteBatch"
	case Export:
		return "Export"
	case AdminScatter:
		return "AdminScatter"
	case AddSSTable:
		return "AddSSTable"
	case LinkExternalSSTable:
		return "LinkExternalSSTable"
	case Migrate:
		return "Migrate"
	case RecomputeStats:
		return "RecomputeStats"
	case Refresh:
		return "Refresh"
	case RefreshRange:
		return "RefreshRange"
	case Subsume:
		return "Subsume"
	case RangeStats:
		return "RangeStats"
	case AdminVerifyProtectedTimestamp:
		return "AdminVerifyProtectedTimestamp"
	case QueryResolvedTimestamp:
		return "QueryResolvedTimestamp"
	case Barrier:
		return "Barrier"
	case Probe:
		return "Probe"
	case IsSpanEmpty:
		return "IsSpanEmpty"
	case NumMethods:
		return "NumMethods"
	default:
		return "Method(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}

var StringToMethodMap = map[string]Method{
	"Get":                           0,
	"Put":                           1,
	"ConditionalPut":                2,
	"Increment":                     3,
	"Delete":                        4,
	"DeleteRange":                   5,
	"ClearRange":                    6,
	"RevertRange":                   7,
	"Scan":                          8,
	"ReverseScan":                   9,
	"VectorIndexScan":               10,
	"EndTxn":                        11,
	"AdminSplit":                    12,
	"AdminUnsplit":                  13,
	"AdminMerge":                    14,
	"AdminTransferLease":            15,
	"AdminChangeReplicas":           16,
	"AdminRelocateRange":            17,
	"HeartbeatTxn":                  18,
	"GC":                            19,
	"PushTxn":                       20,
	"RecoverTxn":                    21,
	"QueryLocks":                    22,
	"QueryTxn":                      23,
	"QueryIntent":                   24,
	"ResolveIntent":                 25,
	"ResolveIntentRange":            26,
	"Merge":                         27,
	"TruncateLog":                   28,
	"RequestLease":                  29,
	"TransferLease":                 30,
	"LeaseInfo":                     31,
	"ComputeChecksum":               32,
	"CheckConsistency":              33,
	"InitPut":                       34,
	"WriteBatch":                    35,
	"Export":                        36,
	"AdminScatter":                  37,
	"AddSSTable":                    38,
	"LinkExternalSSTable":           39,
	"Migrate":                       40,
	"RecomputeStats":                41,
	"Refresh":                       42,
	"RefreshRange":                  43,
	"Subsume":                       44,
	"RangeStats":                    45,
	"AdminVerifyProtectedTimestamp": 46,
	"QueryResolvedTimestamp":        47,
	"Barrier":                       48,
	"Probe":                         49,
	"IsSpanEmpty":                   50,
	"MaxMethod":                     50,
	"NumMethods":                    51,
}
